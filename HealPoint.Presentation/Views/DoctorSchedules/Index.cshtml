@model DoctorScheduleDto

@{
	ViewData["Title"] = "Doctor Schedule";
}

<div class="d-flex flex-column flex-column-fluid" style="margin-top:30px;">

	<!--begin::Content-->
	<div id="kt_app_content" class="app-content  flex-column-fluid ">
		<!--begin::Content container-->
		<div id="kt_app_content_container">
			<div class="page-title d-flex flex-column justify-content-center flex-wrap me-3 mb-4 ">
				<!--begin::Title-->
				<h1 class="page-heading d-flex text-gray-900 fw-bold fs-3 flex-column justify-content-center my-0">
					Doctor Schedules
				</h1>
				<!--end::Title-->
				<!--begin::Breadcrumb-->
				<ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
					<!--begin::Item-->
					<li class="breadcrumb-item text-muted">
						<a href="/" class="text-muted text-hover-primary">
							Home
						</a>
					</li>
					<!--end::Item-->
					<!--begin::Item-->
					<li class="breadcrumb-item">
						<span class="bullet bg-gray-500 w-5px h-2px"></span>
					</li>
					<!--end::Item-->
					<!--begin::Item-->
					<li class="breadcrumb-item text-muted">
						Doctor Schedules
					</li>

				</ul>
				<!--end::Breadcrumb-->
			</div>
			<!--begin::Clinic-->
			<div class="card card-flush">
				<!--begin::Card header-->
				<div class="card-header d-flex align-items-center py-5 gap-2 gap-md-5">
					<div class="card-title">
					</div>
				</div>
				<!--begin::Card body-->
				<div class="card-body pt-0">

					<form asp-action="Create" method="post" class="row g-5">

						<!-- Clinic -->
						@* <div class="col-md-6">
							<label asp-for="ClinicId" class="form-label">Clinic</label>
							<select asp-for="ClinicId" asp-items="Model.Clinics" class="form-select" required>
								<option value="">-- Select Clinic --</option>
							</select>
							<span asp-validation-for="ClinicId" class="text-danger"></span>
						</div> *@

						<!-- Start Date -->
						<div class="col-md-3">
							<label asp-for="StartDate" class="form-label">From</label>
							<input asp-for="StartDate" type="date" class="form-control" required />
							<span asp-validation-for="StartDate" class="text-danger"></span>
						</div>

						<!-- End Date -->
						<div class="col-md-3">
							<label asp-for="EndDate" class="form-label">To</label>
							<input asp-for="EndDate" type="date" class="form-control" required />
							<span asp-validation-for="EndDate" class="text-danger"></span>
						</div>

						<!-- Recurrence -->
						<div class="col-md-6">
							<label asp-for="Recurrence" class="form-label">Recurs Every</label>
							<select asp-for="Recurrence" class="form-select" required>
								<option value="">-- Select Pattern --</option>
								<option value="1">Every Week</option>
								<option value="2">Every 2 Weeks</option>
								<option value="3">Every Month</option>
							</select>
							<span asp-validation-for="Recurrence" class="text-danger"></span>
						</div>


						<div class="table-responsive">
							<table id="ScheduleTable" class="table table-row-bordered table-row-gray-300 gy-7">
								<thead class="fw-bold fs-6 text-gray-800">
									<tr>
										<th>Start Date</th>
										<th>End Date</th>
										<th></th>
									</tr>
								</thead>
								<tbody>
									@for (int i = 0; i < Model.DoctorScheduleDetails.Count; i++)
									{
										<tr>
											<td>
												<input class="form-control" type="time" asp-for="@Model.DoctorScheduleDetails[i].StartTime" />
											</td>
											<td>
												<input class="form-control" type="time" asp-for="@Model.DoctorScheduleDetails[i].EndTime" />
											</td>
											<td>
												<button onclick="AddItem(this)" type="button" class="btn btn-primary btnAdd">Add</button>
												<button onclick="DeleteItem(this)" type="button" class="btn btn-danger btnDelete d-none">Delete</button>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>

						<input id="hdnLastIdx" type="hidden" value="0" />


						<!-- Submit -->
						<div class="col-12 mt-4">
							<button type="submit" class="btn btn-primary">Save Schedule</button>
						</div>

					</form>



				</div>
				<!--end::Card body-->
				<!--end::Content container-->
			</div>
			<!--end::Content-->

		</div>
@section Scripts{
	<script>
		function AddItem(btn) {
			var table = document.getElementById('ScheduleTable');
			var rows = table.getElementsByTagName('tr');
			var rowOuterHtml = rows[rows.length - 1].innerHTML;

			var lastRowIdx = document.getElementById('hdnLastIdx').value;
			var nextRowIdx = parseInt(lastRowIdx) + 1;
			document.getElementById('hdnLastIdx').value = nextRowIdx;

			// Replace index in HTML
			rowOuterHtml = rowOuterHtml.replaceAll('_' + lastRowIdx + '_', '_' + nextRowIdx + '_');
			rowOuterHtml = rowOuterHtml.replaceAll('[' + lastRowIdx + ']', '[' + nextRowIdx + ']');
			rowOuterHtml = rowOuterHtml.replaceAll('-' + lastRowIdx + '-', '-' + nextRowIdx + '-');

			// Add new row
			var newRow = table.insertRow();
			newRow.innerHTML = rowOuterHtml;

			// Hide Add button, show Delete button in current row
			var currentRow = btn.closest('tr');
			if (currentRow) {
				var addBtn = currentRow.querySelector('.btnAdd');
				var deleteBtn = currentRow.querySelector('.btnDelete');

				if (addBtn) addBtn.classList.add('d-none');
				if (deleteBtn) deleteBtn.classList.remove('d-none');
			}
		}

		function DeleteItem(btn) {
			var row = btn.closest('tr');
			if (row) row.remove();

			// Show Add button in last row
			var rows = document.querySelectorAll('#ScheduleTable tr');
			if (rows.length > 0) {
				var lastRow = rows[rows.length - 1];
				var addBtn = lastRow.querySelector('.btnAdd');
				var deleteBtn = lastRow.querySelector('.btnDelete');

				if (addBtn) addBtn.classList.remove('d-none');
				if (deleteBtn && rows.length === 1) {
					deleteBtn.classList.add('d-none');
				}
			}
		}
	</script>
}
