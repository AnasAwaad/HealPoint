@model ClinicSessionListDto

@{
    ViewData["Title"] = "Clinic Opening Hours";

    var days = new string[]{
        "saturday",
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday"
    };
}
<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f8f9fa;
    }

    .container {
        max-width: 800px;
        margin-top: 50px;
        background-color: #ffffff;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }

    .form-check-label {
        font-weight: 500;
        cursor: pointer;
        padding-left: 0.5rem;
    }

    .time-inputs {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .closed-text {
        font-style: italic;
        color: #6c757d;
        font-weight: 400;
    }

    .day-row {
        padding: 15px 0;
        border-bottom: 1px solid #f0f0f0;
    }

    h2 {
        color: #343a40;
        margin-bottom: 30px;
        font-weight: 600;
        text-align: center;
    }

    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
        border-radius: 8px;
        padding: 10px 25px;
        font-weight: 600;
        transition: background-color 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0b5ed7;
        border-color: #0a58ca;
    }
</style>
<div class="container">
    <h2>Clinic Opening Hours</h2>
    <form id="clinicHoursForm">
        <input type="hidden" id="clinicId" value="@Model.ClinicId"/>

        @*Iterate through all 7 days*@
        @for (int day = 0; day < 7; day++)
        {
            var dayName = days[day];

            // Find if there's an existing session for this day
            var session = Model.ClinicSessions.FirstOrDefault(s => (int)s.DayOfWeek == day);

            var isChecked = session != null;

            // Get default values or existing values for time inputs
            var openTime = isChecked ? session.StartTime.ToString("HH:mm") : "09:00";
            var closeTime = isChecked ? session.EndTime.ToString("HH:mm") : "18:00";

            <div class="row day-row d-flex align-items-center mb-3">
                <div class="col-1 col-md-1">
                    <input class="form-check-input" type="checkbox" id="@(dayName)Checkbox" @(isChecked ? "checked" : "")>
                </div>
                <div class="col-3 col-md-2">
                    <label class="form-check-label" for="@(dayName)Checkbox">@dayName</label>
                </div>
                <div class="col-8 col-md-9">
                    <div class="time-inputs @(!isChecked ? "d-none":"")" id="@(dayName)TimeInputs" >
                        <input type="time" class="form-control" id="@(dayName)OpenTime" value="@openTime">
                        <input type="time" class="form-control" id="@(dayName)CloseTime" value="@closeTime">
                    </div>
                    <span class="closed-text @(isChecked ? "d-none":"")" id="@(dayName)ClosedText">Clinic Closed</span>
                </div>
            </div>
        }
        

        <div class="d-grid gap-2 col-6 mx-auto mt-4">
            <button type="submit" class="btn btn-primary">Save Hours</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            

            // Iterate over each day
            const days =[
                { name: 'saturday', dayOfWeek: 0 },
                { name: 'sunday', dayOfWeek: 1 },
                { name: 'monday', dayOfWeek: 2 },
                { name: 'tuesday', dayOfWeek: 3 },
                { name: 'wednesday', dayOfWeek: 4 },
                { name: 'thursday', dayOfWeek: 5 },
                { name: 'friday', dayOfWeek: 6 },
            ]


            days.forEach(function (day) {
                const checkboxId = day.name + 'Checkbox';

                toggleDayInputs(checkboxId);

                $('#' + checkboxId).change(function () {
                    toggleDayInputs(checkboxId);
                });
            });

            // Handle the visibility of time inputs 
            function toggleDayInputs(checkboxId) {
                const checkbox = $('#' + checkboxId);
                const dayName = checkboxId.replace('Checkbox', '');
                const timeInputs = $('#' + dayName + 'TimeInputs');
                const closedText = $('#' + dayName + 'ClosedText');

                if (checkbox.is(':checked')) {
                    timeInputs.show();
                    closedText.hide();
                } else {
                    timeInputs.hide();
                    closedText.show();
                }
            }

            // Handle form submission
            $('#clinicHoursForm').submit(function (event) {
                event.preventDefault();

                const clinicSessions = [];
                const clinicId = $('#clinicId').val();

                days.forEach(function (day) {
                    const checkbox = $('#' + day.name + 'Checkbox');
                    const openTimeInput = $('#' + day.name + 'OpenTime');
                    const closeTimeInput = $('#' + day.name + 'CloseTime');

                    if (checkbox.is(':checked')) {
                        // Get today's date in YYYY-MM-DD
                        const date = new Date().toISOString().slice(0, 10);
                        // Format: YYYY-MM-DDTHH:mm:ss
                        const startTimeString = date + 'T' + openTimeInput.val() + ':00';
                        const endTimeString = date + 'T' + closeTimeInput.val() + ':00';

                        let session = {
                            Id: 0,
                            StartTime: startTimeString,
                            EndTime: endTimeString,
                            DayOfWeek: day.dayOfWeek,
                            ClinicId: parseInt(clinicId),
                        };
                        clinicSessions.push(session);
                    }
                });

                console.log(clinicSessions);

                
                $.ajax({
                    url: '/ClinicSessions/SaveClinicSessions',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(clinicSessions),
                    success: function(response) {
                        console.log('Hours saved successfully!', response);
                    },
                    error: function(xhr, status, error) {
                        alert('Error saving clinic hours. Please try again.');
                    }
                });
                
            });
        });
    </script>
}